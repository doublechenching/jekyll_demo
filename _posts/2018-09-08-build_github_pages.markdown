---
layout:     post
title:      "构建自己的GitHub Pages"
subtitle:   "使用github pages搭建个人博客"
date:       2018-09-08 12:00:00
author:     "Eric Ching"
header-img: "img/post-bg-2015.jpg"
tags:
    - Life
    - Tutorial
    - github
---

> “使用jeklly和github pages快速构建个人博客”

## 前言

开通技术博客的第一篇文章。

[Talk is cheap, show me code](#build)

&#8194;&#8194;&#8194;&#8194;参考博主[Hux大神](https://huangxuan.me/)的搭建教程，终于把个人的技术博客页面搭建出来，喜欢编程对于bug什么的都有一颗执着的解决冲动，同样看到一个漂亮的个人博客，同样令我蠢蠢欲动。边走边看，从jekyll官网，Hux的主页一步步穷折腾，功夫不负苦心人，终于解决。

&#8194;&#8194;&#8194;&#8194;现在作为一个研究生，每天每月阅读大量的论文和材料，如果不留下笔记，过一段时间肯定会忘记的，所以趁着搭建博客的机会，也想把自己的所学记录下来，一方面是因为想做记录，另外一方面想给实验室留下一点学习材料，把三年的研究和学习之路展示给师弟师妹，希望他们能有所收获。

<p id = "build"></p>
---

## 正文

接下来说说搭建这个博客的技术细节。  

以前也看到过xxx.github.io的网站，以为是自己购买VPS，然后搭建个人博客，本以为这是很困单的事，自己也没有web开发的知识，也懒得折腾，直到几天前。。。搜索代码看到一个韩国人在GitHub上有一个个人主页，界面之漂亮，令我很是喜欢。不仅包含个人写作的文章，还有各种功能，我想这么复杂的功能，GitHub肯定不会像QQ空间一样提供，仔细阅览以后，在网页底部看到“jekyll”链接，几番了解之后，发现是通过github pages+jekyll实现，google一下教程，发现也并不是很难，无非就是先从某个自己喜欢的GitHub主页上把源码clone下来，然后改成自己的资料，如果不想为了更个性的知识，费心去学习web开发知识，那么更新一下个人相关的资料，以后每天写一个markdown文件记录一下，已经满足绝大部分人的需求了。查阅知乎上的教程，搭建一个GitHub Pages有多种解决方案，我推荐jekyll。为什么？github pages官方界面就是jekyll开发，而且提供了教程，遇到坑可以快速找到答案。否者遇到不知道什么鬼的问题，吭哧几天不见得有效果。

使用GitHub Page + jekyll优点非常明显：

* **Markdown**现在是非常流行的文本记录语言，不管是GitHub的Readme还是写本书，Markdown绝对可以胜任
* 使用github pages搭建技术博客是面向程序员的。创建一个仓库，然后开发web界面，git管理代码，然后上传，这是我们每天都在做的事，几乎是零门槛
* 利用 GitHub Pages 的域名和免费无限空间，不用自己折腾主机
	* 如果需要自定义域名，也只需要简单改改 DNS 加个 CNAME 就好了
* Jekyll 个性化定制非常简单，有一个中文网站可以帮助大家了解[jekyll](http://jekyllcn.com/)，网站可能被抢，无法访问只能挂载VPN了

本来觉得最大的缺点可能是 GitHub 在国内访问起来太慢，所以第二天一起床就到 GitCafe(Chinese GitHub Copy) 迁移了一个[镜像](http://huxpro.gitcafe.io)出来，结果还是巨慢。

哥哥可是个前端好嘛！ 果断开 Chrome DevTool 查了下网络请求，原来是 **pending 在了 Google Fonts** 上，页面渲染一直被阻塞到请求超时为止，难怪这么慢。  
忍痛割爱，只好把 Web Fonts 去了（反正超时看到的也只能是 fallback ），果然一下就正常了，而且 GitHub 和 GitCafe 对比并没有感受到明显的速度差异，虽然 github 的 ping 值明显要高一些，达到了 300ms，于是用 DNSPOD 优化了一下速度。

---
配置的过程中没有什么难度，但也遇到了一下小坑，网络的教程参差不齐，如果有时间，有点英语底子，还是要看官方教程的。期间我在按照教程安装各种包，遇到各种安装错误，有的教程也没提及，反反复复的查找，很容易让人放弃，本来很简单的事情，就因为中文教程没有及时更新，消磨了很多人的耐心。

总的来说步骤就几个：
1. fork一个自己喜欢的主页源码，把项目名改为github_username.github.io
2. 将项目clone到本地，更新所有个人相关的数据
3. 安装ruby开发套件
4. gem安装github pages套件
5. jekyll s，一边写文章，一边在浏览器中预览效果
6. 根据爱好，一点点的修改界面和交互

## 致谢

本文参考Hux大神和jekyll中文